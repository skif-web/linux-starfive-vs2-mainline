# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/starfive/starfive,dsi-encoder.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: starfive jh7110 SoC Encoder

maintainers:
  - Keith Zhao <keith.zhao@starfivetech.com>

description:
  Device-Tree bindings for simple encoder.
  Simple encoder driver only has basic functionality.
  the hardware of dc8200 has 2 output interface, and uses
  syscon to select which one to be used.

properties:
  compatible:
    const: starfive,dsi-encoder

  starfive,syscon:
    $ref: /schemas/types.yaml#/definitions/phandle-array
    items:
      - items:
          - description: phandle to syscon that select crtc output.
          - description: Offset of crtc selection
          - description: Shift of crtc selection
    description:
      A phandle to syscon with two arguments that configure select output.
      The argument one is the offset of crtc selection, the
      argument two is the shift of crtc selection.

  ports:
    $ref: /schemas/graph.yaml#/properties/ports

    properties:
      port@0:
        $ref: /schemas/graph.yaml#/properties/port
        description:
          The first port should be the input coming from the associated dc channel.

      port@1:
        $ref: /schemas/graph.yaml#/properties/port
        description:
          The second port should be the output coming from the associated bridge.

    required:
      - port@0
      - port@1

required:
  - compatible
  - ports

additionalProperties: false

examples:
  - |
        dssctrl: dssctrl@295b0000 {
            compatible = "starfive,jh7110-vout-syscon", "syscon";
            reg = <0x295b0000 0x90>;
        };

        dsi_encoder: dsi_encoder {
            compatible = "starfive,dsi-encoder";
            starfive,syscon = <&dssctrl 0x8 0x12>;

            ports {
                #address-cells = <1>;
                #size-cells = <0>;
                /* input */
                port@0 {
                    #address-cells = <1>;
                    #size-cells = <0>;
                    reg = <0>;
                    dsi_input0:endpoint@0 {
                        reg = <0>;
                        remote-endpoint = <&dc_out_dpi1>;
                    };
                };
                /* output */
                port@1 {
                    reg = <1>;
                    #address-cells = <1>;
                    #size-cells = <0>;
                    dsi_out:endpoint {
                        remote-endpoint = <&mipi_in>;
                    };
                };
            };
        };
